Index: src/main/java/View/Menu/MainMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.Menu;\r\n\r\npublic class MainMenu extends Menu {\r\n\r\n//    private Menu productMenu = new ProductMenu();\r\n//    private Menu productsMenu = new ProductsMenu();\r\n//    private Menu offMenu = new OffsMenu();\r\n\r\n    public MainMenu() {\r\n        options.add(\"products\");\r\n        options.add(\"offs\");\r\n        options.add(\"login menu\");\r\n        options.add(\"help\");\r\n        options.add(\"back\");\r\n\r\n    }\r\n\r\n    public void execute() {\r\n        String input;\r\n        do {\r\n            showCommands();\r\n            System.out.println(\"Enter Number :\");\r\n            if(!getMatcher(input = scanner.nextLine().trim(), \"(\\\\d)\").matches()){\r\n                continue;\r\n            }\r\n            switch (input.trim()) {\r\n                case \"1\":\r\n//                    productsMenu.execute();\r\n                    break;\r\n                case \"2\":\r\n                    //off menu\r\n//                    offMenu.execute();\r\n                    break;\r\n                case \"3\":\r\n                    LoginMenu.getLoginMenu().execute();\r\n                    showCommands();\r\n                    break;\r\n                case \"4\":\r\n                    showCommands();\r\n                    break;\r\n                case \"5\":\r\n                    return;\r\n            }\r\n        }while (!input.equalsIgnoreCase(\"end\"));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/Menu/MainMenu.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
+++ src/main/java/View/Menu/MainMenu.java	(date 1588323849869)
@@ -2,17 +2,12 @@
 
 public class MainMenu extends Menu {
 
-//    private Menu productMenu = new ProductMenu();
-//    private Menu productsMenu = new ProductsMenu();
-//    private Menu offMenu = new OffsMenu();
-
     public MainMenu() {
         options.add("products");
         options.add("offs");
         options.add("login menu");
         options.add("help");
         options.add("back");
-
     }
 
     public void execute() {
@@ -28,7 +23,6 @@
 //                    productsMenu.execute();
                     break;
                 case "2":
-                    //off menu
 //                    offMenu.execute();
                     break;
                 case "3":
Index: src/main/java/View/Menu/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.Menu;\r\n\r\nimport View.CommandsSource;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic abstract class Menu {\r\n\r\n    protected static Scanner scanner = new Scanner(System.in);\r\n    protected CommandsSource commands;\r\n    protected ArrayList<String> options = new ArrayList<>();\r\n\r\n    public static Matcher getMatcher(String input, String regex) {\r\n        Pattern pattern = Pattern.compile(regex);\r\n        return pattern.matcher(input);\r\n    }\r\n\r\n    public static Scanner getScanner() {\r\n        return scanner;\r\n    }\r\n\r\n    protected void showCommands() {\r\n        int number = 0;\r\n        for (String option : options) {\r\n            System.out.println(++number + \" \" + option);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/Menu/Menu.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
+++ src/main/java/View/Menu/Menu.java	(date 1588324255636)
@@ -1,7 +1,5 @@
 package View.Menu;
 
-import View.CommandsSource;
-
 import java.util.ArrayList;
 import java.util.Scanner;
 import java.util.regex.Matcher;
@@ -10,18 +8,46 @@
 public abstract class Menu {
 
     protected static Scanner scanner = new Scanner(System.in);
-    protected CommandsSource commands;
     protected ArrayList<String> options = new ArrayList<>();
 
     public static Matcher getMatcher(String input, String regex) {
         Pattern pattern = Pattern.compile(regex);
         return pattern.matcher(input);
     }
+    public enum RegexSource {
+        CREATE_ACCOUNT("(manager|seller|customer)\\s+(\\S+)\\s+(\\S+)"),
+        LOGIN("(\\S+)\\s+(\\S+)");
+
+        String regex;
+        RegexSource(String regex) {
+            this.regex = regex;
+        }
+    }
 
     public static Scanner getScanner() {
         return scanner;
     }
 
+    public static boolean isThisRegexMatch(String regex, String input) {
+        Pattern pattern = Pattern.compile(regex);
+        Matcher matcher = pattern.matcher(input);
+        return matcher.matches();
+    }
+
+    public static Matcher getField(String errorToPrint, String regex) {
+        String input = "";
+        do{
+            if (input.equalsIgnoreCase("back")) {
+                return null;
+            }
+            System.out.println(errorToPrint);
+        }
+        while (!isThisRegexMatch(regex, input = scanner.nextLine().trim()));
+        Matcher matcher = Pattern.compile(regex).matcher(input);
+        matcher.matches();
+        return matcher;
+    }
+
     protected void showCommands() {
         int number = 0;
         for (String option : options) {
Index: src/main/java/View/Menu/LoginMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.Menu;\r\n\r\nimport Control.Controller;\r\nimport View.CommandsSource;\r\n\r\nimport java.util.regex.Matcher;\r\n\r\nimport static View.Outputs.*;\r\n\r\npublic class LoginMenu extends Menu {\r\n\r\n    private static LoginMenu loginMenu = new LoginMenu();\r\n\r\n    public static LoginMenu getLoginMenu(){\r\n        return loginMenu;\r\n    }\r\n\r\n    private LoginMenu() {\r\n        options.add(\"create account\");\r\n        options.add(\"login\");\r\n        options.add(\"logout\");\r\n        options.add(\"help\");\r\n        options.add(\"back\");\r\n    }\r\n\r\n    public void execute() {\r\n        String input;\r\n        do {\r\n            showCommands();\r\n            System.out.println(\"Enter Number :\");\r\n            if(!CommandsSource.isThisRegexMatch(\"(\\\\d)\", input = scanner.nextLine())){\r\n                continue;\r\n            }\r\n            switch (input.trim()) {\r\n                case \"1\":\r\n                    createAccount();\r\n                    break;\r\n                case \"2\":\r\n                    login();\r\n                    break;\r\n                case \"3\":\r\n                    logout();\r\n                    break;\r\n                case \"4\":\r\n                    showCommands();\r\n                    break;\r\n                case \"5\":\r\n                    return;\r\n            }\r\n        }while (!input.equalsIgnoreCase(\"end\"));\r\n    }\r\n\r\n    private void createAccount() {\r\n        String error = \"please Enter type(customer|seller|manger) and username \\n\" + \"\" +\r\n                \"sample : \\t customer ali\\n\" +\r\n                \"for back write \\\"back\\\"\";\r\n        // create account\r\n        Matcher matcher1 = CommandsSource.getField(error, \"(customer|seller|manager) (\\\\S+)\");\r\n        if (matcher1 == null) {\r\n            return;\r\n        }\r\n        Matcher matcher2 = CommandsSource.getField(\"Enter a valid password\", \"(\\\\S+)\");\r\n        if (matcher2 == null) {\r\n            return;\r\n        }\r\n        //////har dafe dastooro bayad bezane ya bere too while\r\n        printCreateAccountResult(Controller.getOurController().controllerNewAccount(matcher1.group(1),\r\n                matcher1.group(2),\r\n                matcher2.group(1)));\r\n    }\r\n\r\n    private void login() {\r\n        String error = \"please Enter username \\n\" + \"\" +\r\n                \"sample : \\t login account customer ali\\n\" +\r\n                \"for back write \\\"break\\\"\";\r\n        Matcher matcher1 = CommandsSource.getField(error, \"login\\\\s(\\\\S+)\");\r\n        if (matcher1 == null) {\r\n            return;\r\n        }\r\n        Matcher matcher2 = CommandsSource.getField(\"Enter a valid password\", \"(\\\\S+)\");\r\n        if (matcher1 == null) {\r\n            return;\r\n        }\r\n        printLoginResult(Controller.getOurController().controllerLogin(matcher1.group(1), matcher2.group(1)));\r\n    }\r\n\r\n\r\n    private void logout() {\r\n        printLogoutResult(Controller.getOurController().logout());\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/Menu/LoginMenu.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
+++ src/main/java/View/Menu/LoginMenu.java	(date 1588325558234)
@@ -1,7 +1,6 @@
 package View.Menu;
 
 import Control.Controller;
-import View.CommandsSource;
 
 import java.util.regex.Matcher;
 
@@ -28,7 +27,7 @@
         do {
             showCommands();
             System.out.println("Enter Number :");
-            if(!CommandsSource.isThisRegexMatch("(\\d)", input = scanner.nextLine())){
+            if(!isThisRegexMatch("(\\d)", input = scanner.nextLine())){
                 continue;
             }
             switch (input.trim()) {
@@ -51,40 +50,41 @@
     }
 
     private void createAccount() {
-        String error = "please Enter type(customer|seller|manger) and username \n" + "" +
-                "sample : \t customer ali\n" +
+        Matcher matchUsername;
+        Matcher matchPassword;
+        String message = "Please enter type of account do you want (customer|seller|manger) and username \n" + "" +
+                "sample : customer @ali.23\n" +
                 "for back write \"back\"";
+
         // create account
-        Matcher matcher1 = CommandsSource.getField(error, "(customer|seller|manager) (\\S+)");
-        if (matcher1 == null) {
+        if ((matchUsername = getField(message, "(customer|seller|manager) (\\S+[^\"/[]:;|=,+*?<>`'])")) == null) {
             return;
         }
-        Matcher matcher2 = CommandsSource.getField("Enter a valid password", "(\\S+)");
-        if (matcher2 == null) {
+        //get password
+        if ((matchPassword = getField("Enter a valid password", "(\\S+)")) == null) {
             return;
         }
-        //////har dafe dastooro bayad bezane ya bere too while
-        printCreateAccountResult(Controller.getOurController().controllerNewAccount(matcher1.group(1),
-                matcher1.group(2),
-                matcher2.group(1)));
+        //enter command or go to while
+        printCreateAccountResult(Controller.getOurController().controllerNewAccount(matchUsername.group(1),
+                matchUsername.group(2),
+                matchPassword.group(1)));
     }
 
     private void login() {
         String error = "please Enter username \n" + "" +
                 "sample : \t login account customer ali\n" +
                 "for back write \"break\"";
-        Matcher matcher1 = CommandsSource.getField(error, "login\\s(\\S+)");
+        Matcher matcher1 = getField(error, "login\\s(\\S+)");
         if (matcher1 == null) {
             return;
         }
-        Matcher matcher2 = CommandsSource.getField("Enter a valid password", "(\\S+)");
+        Matcher matcher2 = getField("Enter a valid password", "(\\S+)");
         if (matcher1 == null) {
             return;
         }
         printLoginResult(Controller.getOurController().controllerLogin(matcher1.group(1), matcher2.group(1)));
     }
 
-
     private void logout() {
         printLogoutResult(Controller.getOurController().logout());
     }
Index: src/Main.java
===================================================================
--- src/Main.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
+++ src/Main.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
@@ -1,15 +0,0 @@
-public class Main {
-
-    public static void fun1(){
-        try {
-            System.out.println(1 / 0);
-        }
-        catch (Exception e){
-            System.out.println(e);
-        }
-    }
-
-    public static void main(String[] args) {
-	fun1();
-    }
-}
Index: src/main/java/View/CommandsSource.java
===================================================================
--- src/main/java/View/CommandsSource.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
+++ src/main/java/View/CommandsSource.java	(revision bf69f91a706dddcde286eda7fc6e094d96d614b0)
@@ -1,198 +0,0 @@
-package View;
-
-import View.Menu.MainMenu;
-import View.Menu.Menu;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Scanner;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-import static View.Menu.Menu.getMatcher;
-
-public enum CommandsSource {
-    /************************************GeneralCommands*****************************************/
-
-    VIEW_PERSONAL_INFO("VIEW_PERSONAL_INFO", ""),
-    VIEW_DISCOUNT_CODES("VIEW_DISCOUNT_CODES", ""),
-    EDIT_PERSONAL_INFO("EDIT_PERSONAL_INFO", ""),
-    SHOW_PRODUCTS("SHOW_PRODUCTS", ""),
-    SHOW_PRODUCT("SHOW_PRODUCT", ""),
-    SHOW_CATEGORIES("SHOW_CATEGORIES", ""),
-    REMOVE_PRODUCT("REMOVE_PRODUCT", ""),
-    VIEW_BALANCE("VIEW_BALANCE", ""),
-    SORTING("SORTING", ""),
-    HELP("HELP", ""),
-    BACK("BACK", ""),
-    LOGOUT("LOGOUT", ""),
-
-
-    /*********************************Create/LoginMenuCommands***********************************/
-
-    CREATE_ACCOUNT("CREATE_ACCOUNT", "(manager|seller|customer)\\s+(\\S+)\\s+(\\S+)"),
-    LOGIN("LOGIN", "(\\S+)\\s+(\\S+)"),
-
-
-    /************************************ManagerMenuCommands*************************************/
-
-    MANAGE_USERS("MANAGE_USERS", ""),
-    VIEW_USER("VIEW_USER", ""),
-    CHANGE_TYPE_USER("CHANGE_TYPE_USER", ""),
-    REMOVE_USER("REMOVE_USER", ""),
-    CREATE_MANAGER_PROFILE("CREATE_MANAGER_PROFILE", ""),
-    MANAGE_ALL_PRODUCTS("MANAGE_ALL_PRODUCTS", ""),
-    CREATE_DISCOUNT_CODE("CREATE_DISCOUNT_CODE", ""),
-    VIEW_DISCOUNT_CODE("VIEW_DISCOUNT_CODE", ""),
-    EDIT_DISCOUNT_CODE("EDIT_DISCOUNT_CODE", ""),
-    REMOVE_DISCOUNT_CODE("REMOVE_DISCOUNT_CODE", ""),
-    MANAGE_REQUESTS("MANAGE_REQUESTS", ""),
-    DETAILS_REQUEST("DETAILS_REQUEST", ""),
-    ACCEPT_REQUEST("ACCEPT_REQUEST", ""),
-    DECLINE_REQUEST("DECLINE_REQUEST", ""),
-    MANAGE_CATEGORIES("MANAGE_CATEGORIES", ""),
-    EDIT_CATEGORY("EDIT_CATEGORY", ""),
-    ADD_CATEGORY("ADD_CATEGORY", ""),
-    REMOVE_CATEGORY("REMOVE_CATEGORY", ""),
-
-
-    /**********************************SellerMenuCommands****************************************/
-
-    VIEW_COMPANY_INFORMATION("VIEW_COMPANY_INFORMATION", "(?i)view\\s+company\\s+information\\s*"),
-    VIEW_SALES_HISTORY("VIEW_SALES_HISTORY", ""),
-    MANAGE_PRODUCTS("MANAGE_PRODUCTS", ""),
-    VIEW_PRODUCT("VIEW_PRODUCT", ""),
-    VIEW_BUYERS("VIEW_BUYERS", ""),
-    EDIT_PRODUCT("EDIT_PRODUCT", ""),
-    ADD_PRODUCT("ADD_PRODUCT", ""),
-    VIEW_OFFS("VIEW_OFFS", ""),
-    VIEW_OFF("VIEW_OFF", ""),
-    EDIT_OFF("EDIT_OFF", ""),
-    ADD_OFF("ADD_OFF", ""),
-
-
-    /**********************************CustomerMenuCommands***************************************/
-
-    VIEW_CART("VIEW_CART", ""),
-    PURCHASE("PURCHASE", ""),
-    VIEW_ORDERS("VIEW_ORDERS", ""),
-    SHOW_ORDERS("SHOW_ORDERS", ""),
-    RATE("RATE", ""),
-    INCREASE_PRODUCT("INCREASE_PRODUCT", ""),
-    DECREASE_PRODUCT("DECREASE_PRODUCT", ""),
-    SHOW_TOTAL_PRICE("SHOW_TOTAL_PRICE", ""),
-
-
-    /***********************************ProductsMenuCommands**************************************/
-
-    PRODUCTS("PRODUCTS", ""),
-    VIEW_CATEGORIES("VIEW_CATEGORIES", ""),
-    FILTERING("FILTERING", ""),
-    SHOW_AVAILABLE_FILTERS("SHOW_AVAILABLE_FILTERS", ""),
-    FILTER("FILTER", ""),
-    CURRENT_FILTERS("CURRENT_FILTERS", ""),
-    DISABLE_FILTER("DISABLE_FILTER", ""),
-    SHOW_AVAILABLE_SORTS("SHOW_AVAILABLE_SORTS", ""),
-    SORT("SORT", ""),
-    CURRENT_SORT("CURRENT_SORT", ""),
-    DISABLE_SORT("DISABLE_SORT", ""),
-
-
-    /**********************************ProductMenuCommands****************************************/
-
-    DIGEST("DIGEST", ""),
-    ADD_TO_CART("ADD_TO_CART", ""),
-    SELECT_SELLER("SELECT_SELLER", ""),
-    ATTRIBUTES("ATTRIBUTES", ""),
-    COMPARE("COMPARE", ""),
-    COMMENTS("COMMENTS", ""),
-    ADD_COMMENT("ADD_COMMENT", ""),
-
-
-    /*************************************OffMenuCommand*******************************************/
-
-    OFFS("OFFS", "");
-
-
-
-
-    /***************************************EnumBody***********************************************/
-
-
-    // ------> fields
-    private String name;
-    private String regex;
-    public Pattern commandPattern;
-    private ArrayList<String> allRegex = new ArrayList<>();
-    private static Scanner scanner = Menu.getScanner();
-
-
-    // ------> constructor
-    CommandsSource(String name, String regex) {
-        this.name = name;
-        this.regex = regex;
-        allRegex.add(regex);
-        this.commandPattern = Pattern.compile(regex);
-    }
-
-
-//    // ------> Menus
-//    private static Menu managerMenu = new ManagerMenu();
-//    private static Menu sellerMenu = new SellerMenu();
-//    private static Menu customerMenu = new CustomerMenu();
-//    private static Menu productMenu = new ProductMenu();
-//    private static Menu offMenu = new OffsMenu();
-    private static Menu mainMenu = new MainMenu();
-
-
-    //-------> methods
-    public List<String> getAllRegex() {
-        return allRegex;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public String getRegex() {
-        return regex;
-    }
-
-    public static String findEnum(List<String> allRegex, String input) {
-        for (String regex : allRegex) {
-            if (getMatcher(input, regex).find()) {
-                return getEnumNameByRegex(regex);
-            }
-        }
-        return "Very wrong";
-    }
-
-    public static String getEnumNameByRegex(String regex) {
-        for (CommandsSource command : CommandsSource.values()) {
-            if (command.getRegex().equals(regex)) {
-                return command.getName();
-            }
-        }
-        return null;
-    }
-
-    public static boolean isThisRegexMatch(String regex, String input) {
-        Pattern pattern = Pattern.compile(regex);
-        Matcher matcher = pattern.matcher(input);
-        return matcher.matches();
-    }
-
-    public static Matcher getField(String errorToPrint, String regex) {
-        String input = "";
-        do{
-            if (input.equalsIgnoreCase("back")) {
-                return null;
-            }
-            System.out.println(errorToPrint);
-        }
-        while (!isThisRegexMatch(regex, input = scanner.nextLine().trim()));
-        Matcher matcher = Pattern.compile(regex).matcher(input);
-        matcher.matches();
-        return matcher;
-    }
-}
Index: .idea/Project_team-4.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/Project_team-4.iml	(date 1587995010295)
+++ .idea/Project_team-4.iml	(date 1587995010295)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1588324256230)
+++ .idea/uiDesigner.xml	(date 1588324256230)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: class Model.Account/ali
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- class Model.Account/ali	(date 1588322238246)
+++ class Model.Account/ali	(date 1588322238246)
@@ -0,0 +1,1 @@
+{"history":[],"offCodes":[],"userName":"ali","passWord":"123","credit":0.0,"saveAndLoad":{}}
\ No newline at end of file
