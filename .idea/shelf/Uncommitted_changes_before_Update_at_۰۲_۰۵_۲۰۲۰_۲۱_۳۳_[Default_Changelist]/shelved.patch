Index: src/main/java/View/Menu/ManagerMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package View.Menu;\r\n\r\n//import View.Manager;\r\n\r\nimport Control.Controller;\r\nimport Model.*;\r\nimport java.util.regex.Matcher;\r\n\r\nimport static Control.Controller.editField;\r\n\r\n\r\npublic class ManagerMenu extends Menu {\r\n\r\n    private static final Menu managerMenu = new ManagerMenu();\r\n\r\n\r\n    private ManagerMenu() {\r\n        options.add(\"view personal info\");\r\n        options.add(\"manage users\");\r\n        options.add(\"manage all products\");\r\n        options.add(\"create discount code\");\r\n        options.add(\"view discount codes\");\r\n        options.add(\"manage requests\");\r\n        options.add(\"manage categories\");\r\n        options.add(\"help\");\r\n        options.add(\"back\");\r\n    }\r\n\r\n    public static Menu getManagerMenu() {\r\n        return managerMenu;\r\n    }\r\n\r\n    private Menu getManageUsersMenu() {\r\n        return new Menu() {\r\n            @Override\r\n            public void execute() {\r\n                String input;\r\n                Matcher matcher;\r\n                do {\r\n                    show();\r\n                    System.out.println(\"Enter Number 1 for show a user 2 for delete a user 3 for making a manager profile and end too go back:\");\r\n                    if(!isThisRegexMatch(\"(\\\\d)\", input = scanner.nextLine())){\r\n                        continue;\r\n                    }\r\n                    switch (input.trim()) {\r\n                        case \"1\" :\r\n                            matcher = getField(\"please write in this format: view [username]\", \"view\\\\s(\\\\S+)\");\r\n                            Controller.getOurController().controllerShowUser(matcher.group(1));\r\n                            break;\r\n                        case \"2\" :\r\n                            matcher = getField(\"Please write in this format: delete [username]\", \"delete\\\\s+(\\\\S+)\");\r\n                            Controller.getOurController().controllerDeleteAnUser(matcher.group(1));\r\n                            break;\r\n                        case \"3\" :\r\n//                            System.out.println(\"Please enter a userName:\");\r\n//                            input = scanner.nextLine();\r\n//                            System.out.println(\"Enter firstName: lastName: email: phoneNumber passWord:\");\r\n//                            input = scanner.nextLine();\r\n//                            String[] splitInput = input.split(\"\\\\s\");\r\n//\r\n//                            Outputs.printCreateAccountResult(Controller.getOurController().controllerCreateNewManagerAccountFromManager(splitInput[0], splitInput[1]));\r\n                            break;\r\n                        default:\r\n//                            System.out.println(\"Enter a valid command please.\");\r\n                    }\r\n                } while (!input.equalsIgnoreCase(\"end\"));\r\n            }\r\n        };\r\n    }\r\n//\r\n//    private static void creatDiscountCode() {\r\n//        String input = \"\";\r\n//        ArrayList<Customer> usersToContain = new ArrayList<>();\r\n//        System.out.println(\"Enter barcode:\\nstartingTime:\\nendingTime:\\noffAmount:\\nusageTimes:\\nusersToContain\");\r\n//        Matcher barcode = CommandsSource.getField(\"Please enter a valid barcode\", \"(\\\\S+)\");\r\n//        Matcher startingTime = CommandsSource.getField(\"Please enter a valid starTime\", \"(\\\\d\\\\d):(\\\\d\\\\d):(\\\\d\\\\d)\");\r\n//        Matcher endingTime = CommandsSource.getField(\"Please enter a valid endingTime\", \"(\\\\d\\\\d):(\\\\d\\\\d):(\\\\d\\\\d)\");\r\n//        double offAmount = Double.parseDouble(CommandsSource.getField(\"Please enter a valid offAmount\", \"(\\\\d+)\"));\r\n//        int usageTimes = Integer.parseInt(CommandsSource.getField(\"Please enter a valid usageTime\", \"(\\\\d+)\"));\r\n//        String containingCustomers = scanner.nextLine().trim();\r\n//        Controller.getOurController().controllerCreateOffCode(barcode, startingTime, endingTime, offAmount, usageTimes, containingCustomers);\r\n//    }\r\n//\r\n//    private static Menu getDiscountCodeMenu() {\r\n//        return new Menu() {\r\n//            @Override\r\n//            protected void showCommands() {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void execute() {\r\n//                String input = \"\";\r\n//                System.out.println(Controller.getOurController().getAllDiscounts());\r\n//                while (!(input = scanner.nextLine()).equalsIgnoreCase(\"end\")) {\r\n//                    String[] splitInput = input.split(\"\\\\s\");\r\n//                    switch (findEnum(commands.getAllRegex(), input)) {\r\n//                        case \"VIEW_DISCOUNT_CODE\" :\r\n//                            System.out.println(Controller.getOurController().getDiscount(splitInput[3]));\r\n//                            break;\r\n//                        case \"EDIT_DISCOUNT_CODE\" :\r\n//                            Controller.getOurController().removeDiscount(splitInput[3]);\r\n//                            creatDiscountCode();\r\n//                        case \"REMOVE_DISCOUNT_CODE\" :\r\n//                            Controller.getOurController().removeDiscount(splitInput[3]);\r\n//                            break;\r\n//                    }\r\n//                }\r\n//            }\r\n//        };\r\n////        System.out.println(Controller.getOurController().showAllDiscountCodes());\r\n//    }\r\n//\r\n//    private static Menu getManageRequestMenu() {\r\n//        return new Menu() {\r\n//            @Override\r\n//            protected void showCommands() {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void execute() {\r\n//                String input = \"\";\r\n//                System.out.println(Controller.getOurController().showAllRequests());\r\n//                Request request = null;\r\n//                while (!(input = scanner.nextLine()).equalsIgnoreCase(\"end\")) {\r\n//                    String[] splitInput = input.split(\"\\\\s\");\r\n//                    switch (findEnum(commands.getAllRegex(), input)) {\r\n//                        case \"DETAILS_REQUEST\" :\r\n//                            request = Request.getRequestByName(splitInput[1]);\r\n//                            System.out.println(request);\r\n//                            break;\r\n//                        case \"ACCEPT_REQUEST\" :\r\n//                            Controller.getOurController().acceptRequest(request);\r\n//                            break;\r\n//                        case \"DECLINE_REQUEST\" :\r\n//                            Controller.getOurController().declineRequest(request);\r\n//                            break;\r\n//                    }\r\n//                }\r\n//            }\r\n//        };\r\n//    }\r\n//\r\n//    private static Menu getManageCategoriesMenu() {\r\n//        return new Menu() {\r\n//            @Override\r\n//            protected void showCommands() {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void execute() {\r\n//                String input = \"\";\r\n//                System.out.println(Category.getAllCategories());\r\n//                Request request = null;\r\n//                while (!(input = scanner.nextLine()).equalsIgnoreCase(\"end\")) {\r\n//                    String[] splitInput = input.split(\"\\\\s\");\r\n//                    switch (findEnum(commands.getAllRegex(), input)) {\r\n//                        case \"EDIT_CATEGORY\" :\r\n//                            request = Request.getRequestByName(splitInput[1]);\r\n//                            System.out.println(request);\r\n//                            break;\r\n//                        case \"ADD_CATEGORY\" :\r\n//                        case \"REMOVE_CATEGORY\" :\r\n//                            addCategory();\r\n//                            break;\r\n//                    }\r\n//                }\r\n//            }\r\n//        };\r\n//    }\r\n//\r\n//    private static void addCategory() {\r\n//        String input = \"\";\r\n//        ArrayList<Customer> usersToContain = new ArrayList<>();\r\n//        System.out.println(\"Enter name:\\nsubCategorie:\\ntags:\\nproductsList:\");\r\n//        String name = CommandsSource.getField(\"Please enter a valid barcode\", \"(\\\\S+)\");;\r\n//        String subCategories = scanner.nextLine().trim();\r\n//        String tags = scanner.nextLine().trim();\r\n//        String productsList = scanner.nextLine().trim();\r\n//        Controller.getOurController().createCategory(name, subCategories, tags, productsList);\r\n//    }\r\n\r\n\r\n    private static Menu viewAndEditPersonalInfo() {\r\n        return new Menu() {\r\n            private void personalInfo() {\r\n                Matcher matcher = getField(\"Enter in this format: edit [field]\", \"edit\\\\s(\\\\S+)\");\r\n                switch (editField(matcher.group(1))) {\r\n                    case 1:\r\n                        SaveAndLoad.getSaveAndLoad().writeJSONAccount(Controller.getLoggedInAccount());\r\n                        System.out.println(\"Changed well\");\r\n                        break;\r\n                    case 2:\r\n                        System.out.println(\"Sth went wrong in changing\");\r\n\r\n                }\r\n            }\r\n            @Override\r\n            protected void execute() {\r\n                System.out.println(Controller.getLoggedInAccount());\r\n                String input;\r\n                do {\r\n                    System.out.println(\"Enter 1 for edit a field and 2 for back:\");\r\n                    if(!isThisRegexMatch(\"(\\\\d)\", input = scanner.nextLine())){\r\n                        continue;\r\n                    }\r\n                    switch (input) {\r\n                        case \"1\":\r\n                            personalInfo();\r\n                            break;\r\n                        case \"2\":\r\n                            return;\r\n                    }\r\n                }while (!input.equalsIgnoreCase(\"end\"));\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        String input;\r\n        do {\r\n            show();\r\n            System.out.println(\"Enter Number :\");\r\n            if(!isThisRegexMatch(\"(\\\\d)\", input = scanner.nextLine())){\r\n                continue;\r\n            }\r\n            switch (input.trim()) {\r\n                case \"1\":\r\n                    viewAndEditPersonalInfo().execute();\r\n                    break;\r\n\r\n                case \"2\":\r\n                    getManageUsersMenu().execute();\r\n                    break;\r\n//                case \"3\":\r\n//                    while (!(input = scanner.nextLine()).equalsIgnoreCase(\"back\")) {\r\n//                        System.out.println(\"remove a product:\");\r\n//                        //input = scanner.nextLine();\r\n//                        if (CommandsSource.isThisRegexMatch(\"remove\\\\s(\\\\w+)\", input)) {\r\n//                            String[] splitInput = input.split(\"\\\\s\");\r\n//                            Controller.getOurController().controllerRemoveProduct(splitInput[1]);\r\n//                        }\r\n//                    }\r\n//                    break;\r\n//                case \"4\":\r\n//                    creatDiscountCode();\r\n//                    break;\r\n//                case \"5\":\r\n//                    nextMenu = getDiscountCodeMenu();\r\n//                    getDiscountCodeMenu.showCommands();\r\n//                    nextMenu.execute();\r\n//                    break;\r\n//                case \"6\":\r\n//                    nextMenu = getManageRequestMenu();\r\n//                    nextMenu.showCommands();\r\n//                    nextMenu.execute();\r\n//                    break;\r\n//                case \"7\":\r\n//                    nextMenu = getManageCategoriesMenu();\r\n//                    nextMenu.showCommands();\r\n//                    nextMenu.execute();\r\n                case \"8\":\r\n                    show();\r\n                    break;\r\n                case \"9\":\r\n                    return;\r\n            }\r\n        }while (!input.equalsIgnoreCase(\"end\"));\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/Menu/ManagerMenu.java	(revision bbdd7326d8120b6bfafc32f95da1f589fcf332ec)
+++ src/main/java/View/Menu/ManagerMenu.java	(date 1588417277544)
@@ -38,7 +38,7 @@
                 Matcher matcher;
                 do {
                     show();
-                    System.out.println("Enter Number 1 for show a user 2 for delete a user 3 for making a manager profile and end too go back:");
+                    System.out.println("Enter Number 1 for show a user 2 for delete a user 3 for making a manager profile and end to go back:");
                     if(!isThisRegexMatch("(\\d)", input = scanner.nextLine())){
                         continue;
                     }
Index: class Model.Account/reza
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- class Model.Account/reza	(date 1588341316948)
+++ class Model.Account/reza	(date 1588341316948)
@@ -0,0 +1,1 @@
+{"history":[],"offCodes":[],"userName":"reza","passWord":"123","credit":0.0,"saveAndLoad":{}}
\ No newline at end of file
